import Foundation

protocol {{ module_info.name }}View: class {

}

protocol {{ module_info.name }}Presenter {
    func start()
    func setView(_ view: {{ module_info.name }}View)
    func dismiss()
}

protocol Uses{{ module_info.name }}Presenter {
    var {{ module_info.name | downcase }}Presenter: {{ module_info.name }}Presenter { get }
}

class Mixin{{ module_info.name }}Presenter: {{ module_info.name }}Presenter {
    weak var view: {{ module_info.name }}View?
    weak var delegate: {{ module_info.name }}PresenterDelegate?

    func start() {

    }

    func setView(_ view: {{ module_info.name }}View) {
        self.view = view
    }

    func dismiss() {
      delegate?.dismiss(presenter: self)
    }
}
