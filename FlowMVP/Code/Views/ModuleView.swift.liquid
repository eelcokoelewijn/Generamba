import UIKit
final class {{ custom_parameters.name }}ModuleView: UIView {
    private lazy var label: UILabel = {
        let l = UILabel()
        l.translatesAutoresizingMaskIntoConstraints = false
        l.numberOfLines = 0
        l.lineBreakMode = .byWordWrapping
        return l
    }()

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupViews()
        applyViewConstraints()
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    func configure(labelWithText text: String) {
        label.text = text
    }

    private func setupViews() {
        backgroundColor = .white
        addSubview(label)
    }

    private func applyViewConstraints() {
        let views: [String: Any] = ["label": label]
        NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "H:|-[label]-|",
                                                                   options: [],
                                                                   metrics: nil,
                                                                   views: views))
        NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "V:|-[label]-|",
                                                                   options: [],
                                                                   metrics: nil,
                                                                   views: views))
    }
}
