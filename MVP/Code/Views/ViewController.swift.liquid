import UIKit
final class {{ module_info.name }}ViewController: UIViewController, Uses{{ module_info.name }}Presenter {
    let {{ module_info.name | downcase }}Presenter: {{ module_info.name }}Presenter
    private lazy var moduleView: {{ module_info.name }}ModuleView = {{ module_info.name }}ModuleView()

    init(presenter: {{ module_info.name }}Presenter) {
        {{ module_info.name | downcase }}Presenter = presenter
        super.init(nibName: nil, bundle: nil)
        {{ module_info.name | downcase }}Presenter.setOutput(self)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func loadView() {
        super.loadView()
        view = moduleView
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        {{ module_info.name | downcase }}Presenter.start()
    }
}

extension {{ module_info.name }}ViewController: {{ module_info.name }}Output {
    func setLabel(text: String) {
        moduleView.configure(labelWithText: text)
    }
}
