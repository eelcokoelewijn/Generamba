{% include 'Header' %}

import UIKit

final class {{ module_info.name }}HeaderCell: UICollectionViewCell {
    static let titleFont: UIFont = UIFont.systemFont(ofSize: 16, weight: .bold)
    static let textFont: UIFont = UIFont.systemFont(ofSize: 16)
    static let horizontalPadding: CGFloat = 10
    static let verticalPadding: CGFloat = 10

    private lazy var titleLabel: UILabel = {
        let view = UILabel()
        view.translatesAutoresizingMaskIntoConstraints = false
        view.numberOfLines = 0
        view.lineBreakMode = .byWordWrapping
        view.textAlignment = .left
        view.font = {{ module_info.name }}HeaderCell.titleFont
        view.textColor = UIColor.black
        return view
    }()

    private lazy var textLabel: UILabel = {
        let view = UILabel()
        view.translatesAutoresizingMaskIntoConstraints = false
        view.numberOfLines = 0
        view.lineBreakMode = .byWordWrapping
        view.textAlignment = .left
        view.font = {{ module_info.name }}HeaderCell.textFont
        view.textColor = UIColor.blue
        return view
    }()

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupViews()
        applyViewConstraints()
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    func configureWithTitle(_ title: String, text: String) {
        titleLabel.text = title
        textLabel.text = text
    }

    // MARK: Setup views + constraints

    private func setupViews() {
        contentView.backgroundColor = .white
        contentView.addSubview(titleLabel)
        contentView.addSubview(textLabel)
    }

    private func applyViewConstraints() {
        let views = ["titleLabel": titleLabel,
                     "textLabel": textLabel]
        let metrics = ["horizontalPadding": {{ module_info.name }}HeaderCell.horizontalPadding,
                       "verticalPadding": {{ module_info.name }}HeaderCell.verticalPadding]
        NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "H:|-horizontalPadding-[titleLabel]-horizontalPadding-|", options: [], metrics: metrics, views: views))
        NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "H:|-horizontalPadding-[textLabel]-horizontalPadding-|", options: [], metrics: metrics, views: views))
        NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "V:|-verticalPadding-[titleLabel]-[textLabel]-verticalPadding-|", options: [], metrics: metrics, views: views))
    }
}