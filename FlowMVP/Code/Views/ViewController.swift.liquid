import UIKit
final class {{ module_info.name }}ViewController: UIViewController, Uses{{ module_info.name }}Presenter {
    let presenter: {{ module_info.name }}Presenter
    private lazy var moduleView: {{ module_info.name }}ModuleView = {{ module_info.name }}ModuleView()

    init(presenter: {{ module_info.name }}Presenter) {
        self.presenter = presenter
        super.init(nibName: nil, bundle: nil)
        presenter.setOutput(self)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func loadView() {
        super.loadView()
        view = moduleView
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        configureNavBar()
        presenter.start()
    }

    private func configureNavBar() {
        navigationItem.backBarButtonItem = UIBarButtonItem(title: " ",
                                                           style: UIBarButtonItemStyle.plain,
                                                           target: nil,
                                                           action: nil)
        {% if custom_parameters.hasDelegate == "yes" and custom_parameters.delegate != "" %}
        let closeButton: UIBarButtonItem = UIBarButtonItem(title: "close",
                                                           style: UIBarButtonItemStyle.done,
                                                           target: self,
                                                           action: #selector(closeButtonAction(sender:)))
        navigationItem.leftBarButtonItem = closeButton
        {% endif %}
    }
    {% if custom_parameters.hasDelegate == "yes" and custom_parameters.delegate != "" %}
    @objc private func closeButtonAction(sender: UIBarButtonItem) {
        presenter.closeTapped()
    }
    {% endif %}
}

extension {{ module_info.name }}ViewController: {{ module_info.name }}Output {
    func setLabel(text: String) {
        moduleView.configure(labelWithText: text)
    }

    func configure(title: String) {
        self.title = title
    }
}
